#pragma once
#include <sdkgen/support_library.hpp>

namespace rpc { struct message_t; }
namespace rpc { struct version_t; }

#include "magic/ndrole_extension_routines_table_t.start.hpp"
namespace win
{
    struct midl_stub_desc_t;
    struct midl_server_info_t;
    struct ndr_proc_context_t;
    struct midl_stub_message_t;
    struct midl_stubless_proxy_info_t;

    // [struct _NDROLE_EXTENSION_ROUTINES_TABLE]
    // => Windows 10 v1607, Windows 10 v2004, Windows 11, Windows 10 v20H2
    //
    struct ndrole_extension_routines_table_t                                                                                                                                                 
    {                                                                                                                                                                                        
        using ndrole_get_server_info_t =                                                                sdk::function<void(void*, struct win::midl_server_info_t**, sdk::function<int32_t()> const***)>*;                                                                                      
        using ndrole_stub_init_t =                                                                      sdk::function<void(struct rpc::message_t*, struct win::midl_stub_message_t*, const struct win::midl_stub_desc_t*, void*)>*;                                                                                      
        using ndrole_stub_get_buffer_t =                                                                sdk::function<void(void*, void*, struct win::midl_stub_message_t*)>*;                                                                                      
        using ndrole_dcomchannelsethresult_t =                                                          sdk::function<sdk::hresult(void*, uint32_t*, sdk::hresult)>*;                                                                                      
        using ndrole_dcomchannelsetclienthresult_t =                                                    sdk::function<sdk::hresult(void*, sdk::hresult, int32_t)>*;                                                                                      
        using ndrole_ip_buffsize_t =                                                                    sdk::function<void(struct win::midl_stub_message_t*, uint8_t*, const uint8_t*)>*;                                                                                      
        using ndrole_proxy_init_t =                                                                     sdk::function<void(void*, struct rpc::message_t*, struct win::midl_stub_message_t*, const struct win::midl_stub_desc_t*, uint32_t)>*;                                                                                      
        using ndrole_ip_memsize_t =                                                                     sdk::function<void(struct win::midl_stub_message_t*, const uint8_t*)>*;                                                                                      
        using ndrole_ip_mrshl_t =                                                                       sdk::function<uint8_t*(struct win::midl_stub_message_t*, uint8_t*, const uint8_t*)>*;                                                                                      
        using ndrole_ip_unmrshl_t =                                                                     sdk::function<void(struct win::midl_stub_message_t*, uint8_t**, const uint8_t*)>*;                                                                                      
        using ndrole_check_wire_format_t =                                                              sdk::function<void(struct win::midl_stub_message_t*, const uint8_t*, void*)>*;                                                                                      
        using ndr_ext_proxy_get_buffer_t =                                                              sdk::function<void(void*, struct win::midl_stub_message_t*)>*;                                                                                      
        using ndr_ext_proxy_send_receive_t =                                                            sdk::function<void(void*, struct win::midl_stub_message_t*)>*;                                                                                      
        using ndr_ext_free_buffer_t =                                                                   sdk::function<void(void*, struct win::midl_stub_message_t*)>*;                                                                                      
        using ndr_ext_get_com_protocol_version_t =                                                      sdk::variant<sdk::function<int32_t(struct win::midl_stub_message_t*, struct rpc::version_t*)>*, sdk::function<sdk::hresult(struct win::midl_stub_message_t*, struct rpc::version_t*)>*>;                                                                                      
        using ndrole_system_handle_marshall_t =                                                         sdk::function<void(struct win::midl_stub_message_t*, void*, uint8_t, uint32_t, uint32_t*)>*;                                                                                      
        using ndrole_system_handle_unmarshall_t =                                                       sdk::function<void(struct win::midl_stub_message_t*, uint32_t, uint8_t, uint32_t, void**)>*;                                                                                      
        using ndrole_free_system_handle_t =                                                             sdk::function<void(struct win::midl_stub_message_t*, uint8_t, void*)>*;                                                                                      
        using ndr_ext_chk_system_handle_leak_t =                                                        sdk::function<void(struct win::midl_stub_message_t*)>*;                                                                                      
        using ndr_ext_cleanup_all_system_handles_t =                                                    sdk::function<void(struct win::midl_stub_message_t*)>*;                                                                                      
        using ndr64_ext_interface_pointer_buffer_size_t =                                               sdk::function<void(struct win::midl_stub_message_t*, uint8_t*, const void*)>*;                                                                                      
        using ndr64_ext_interface_pointer_memory_size_t =                                               sdk::function<void(struct win::midl_stub_message_t*, const void*)>*;                                                                                      
        using ndr64_ext_interface_pointer_marshall_t =                                                  sdk::function<void(struct win::midl_stub_message_t*, uint8_t*, const void*)>*;                                                                                      
        using ndrole64_ip_unmrshl_t =                                                                   sdk::function<uint8_t*(struct win::midl_stub_message_t*, const void*)>*;                                                                                      
        using ndrole64_proxy_init_t =                                                                   sdk::function<void(void*, struct rpc::message_t*, struct win::midl_stub_message_t*, struct win::midl_stubless_proxy_info_t*, uint32_t)>*;                                                                                      
        using ndrole64_dcom_client_interface_t =                                                        sdk::function<sdk::hresult(void*, struct win::midl_stub_message_t*, struct win::midl_stubless_proxy_info_t*)>*;                                                                                      
        using ndrole64_dcom_neg_syntax_t =                                                              sdk::function<sdk::hresult(void*, struct win::midl_stub_message_t*, struct win::midl_stubless_proxy_info_t*, struct win::ndr_proc_context_t*)>*;                                                                                      
        using ndr_ext_initialize_call_object_t =                                                        sdk::function<void(void*, struct win::midl_stub_message_t*)>*;                                                                                      
        using ndrole_use_fixed_wire_rep_for_interface_pointer_array_and_embedded_conformant_struct_t =  sdk::function<int32_t(struct win::midl_stub_message_t*)>*;                                                                                      
        using ndr_ext_use_fixed_wire_rep_for_interface_pointer_array_and_embedded_conformant_struct_t = ndrole_use_fixed_wire_rep_for_interface_pointer_array_and_embedded_conformant_struct_t ;                                                                                      
                                                                                                                                                                                             
        // Windows 10 v1607, Windows 10 v2004, Windows 11, Windows 10 v20H2                                                                                                                  
        //                                                                                                                                                                                   
        _m000 ndrole_get_server_info_t                                                                 ndr_ext_get_call_method;                                                                //{ +0x0000    +0x0000    +0x0000    +0x0000    } | .NdrExtGetCallMethod
        _m001 sdk::function<void*(void*)>*                                                             ndr_ext_get_server_object;                                                              //{ +0x0008    +0x0008    +0x0008    +0x0008    } | .NdrExtGetServerObject
        _m002 ndrole_stub_init_t                                                                       ndr_ext_stub_initialize;                                                                //{ +0x0010    +0x0010    +0x0010    +0x0010    } | .NdrExtStubInitialize
        _m003 ndrole_stub_get_buffer_t                                                                 ndr_ext_stub_get_buffer;                                                                //{ +0x0018    +0x0018    +0x0018    +0x0018    } | .NdrExtStubGetBuffer
        _m004 ndrole_dcomchannelsethresult_t                                                           ndr_ext_set_error_status;                                                               //{ +0x0020    +0x0020    +0x0020    +0x0020    } | .NdrExtSetErrorStatus
        _m005 ndrole_dcomchannelsetclienthresult_t                                                     ndr_ext_set_client_error_status;                                                        //{ +0x0028    +0x0028    +0x0028    +0x0028    } | .NdrExtSetClientErrorStatus
        _m006 ndrole_ip_buffsize_t                                                                     ndr_ext_interface_pointer_buffer_size;                                                  //{ +0x0030    +0x0030    +0x0030    +0x0030    } | .NdrExtInterfacePointerBufferSize
        _m007 ndrole_proxy_init_t                                                                      ndr_ext_proxy_initialize;                                                               //{ +0x0038    +0x0038    +0x0038    +0x0038    } | .NdrExtProxyInitialize
        _m008 sdk::function<void(uint8_t*)>*                                                           ndr_ext_free_interface_pointer;                                                         //{ +0x0040    +0x0040    +0x0040    +0x0040    } | .NdrExtFreeInterfacePointer
        _m009 ndrole_ip_memsize_t                                                                      ndr_ext_interface_pointer_memory_size;                                                  //{ +0x0048    +0x0048    +0x0048    +0x0048    } | .NdrExtInterfacePointerMemorySize
        _m010 ndrole_ip_mrshl_t                                                                        ndr_ext_interface_pointer_marshall;                                                     //{ +0x0050    +0x0050    +0x0050    +0x0050    } | .NdrExtInterfacePointerMarshall
        _m011 ndrole_ip_unmrshl_t                                                                      ndr_ext_interface_pointer_unmarshall;                                                   //{ +0x0058    +0x0058    +0x0058    +0x0058    } | .NdrExtInterfacePointerUnmarshall
        _m012 ndrole_check_wire_format_t                                                               ndr_ext_get_udt_format;                                                                 //{ +0x0060    +0x0060    +0x0060    +0x0060    } | .NdrExtGetUDTFormat
        _m013 ndr_ext_proxy_get_buffer_t                                                               ndr_ext_proxy_get_buffer;                                                               //{ +0x0068    +0x0068    +0x0068    +0x0068    } | .NdrExtProxyGetBuffer
        _m014 ndr_ext_proxy_send_receive_t                                                             ndr_ext_proxy_send_receive;                                                             //{ +0x0070    +0x0070    +0x0070    +0x0070    } | .NdrExtProxySendReceive
        _m015 ndr_ext_free_buffer_t                                                                    ndr_ext_free_buffer;                                                                    //{ +0x0078    +0x0078    +0x0078    +0x0078    } | .NdrExtFreeBuffer
        _m016 ndr_ext_get_com_protocol_version_t                                                       ndr_ext_get_com_protocol_version;                                                       //{ +0x0080    +0x0080    +0x0080    +0x0080    } | .NdrExtGetComProtocolVersion
        _m017 ndrole_system_handle_marshall_t                                                          ndr_ext_system_handle_marshall;                                                         //{ +0x0088    +0x0088    +0x0088    +0x0088    } | .NdrExtSystemHandleMarshall
        _m018 ndrole_system_handle_unmarshall_t                                                        ndr_ext_system_handle_unmarshall;                                                       //{ +0x0090    +0x0090    +0x0090    +0x0090    } | .NdrExtSystemHandleUnmarshall
        _m019 ndrole_free_system_handle_t                                                              ndr_ext_free_system_handle;                                                             //{ +0x0098    +0x0098    +0x0098    +0x0098    } | .NdrExtFreeSystemHandle
        _m020 ndr_ext_chk_system_handle_leak_t                                                         ndr_ext_chk_system_handle_leak;                                                         //{ +0x00a0    +0x00a0    +0x00a0    +0x00a0    } | .NdrExtChkSystemHandleLeak
        _m021 ndr_ext_cleanup_all_system_handles_t                                                     ndr_ext_cleanup_all_system_handles;                                                     //{ +0x00a8    +0x00a8    +0x00a8    +0x00a8    } | .NdrExtCleanupAllSystemHandles
        _m022 ndr64_ext_interface_pointer_buffer_size_t                                                ndr64_ext_interface_pointer_buffer_size;                                                //{ +0x00b0    +0x00c0    +0x00c0    +0x00c0    } | .Ndr64ExtInterfacePointerBufferSize
        _m023 ndr64_ext_interface_pointer_memory_size_t                                                ndr64_ext_interface_pointer_memory_size;                                                //{ +0x00b8    +0x00c8    +0x00c8    +0x00c8    } | .Ndr64ExtInterfacePointerMemorySize
        _m024 ndr64_ext_interface_pointer_marshall_t                                                   ndr64_ext_interface_pointer_marshall;                                                   //{ +0x00c0    +0x00d0    +0x00d0    +0x00d0    } | .Ndr64ExtInterfacePointerMarshall
        _m025 ndrole64_ip_unmrshl_t                                                                    ndr64_ext_interface_pointer_unmarshall;                                                 //{ +0x00c8    +0x00d8    +0x00d8    +0x00d8    } | .Ndr64ExtInterfacePointerUnmarshall
        _m026 ndrole64_proxy_init_t                                                                    ndr64_ext_proxy_initialize;                                                             //{ +0x00d0    +0x00e0    +0x00e0    +0x00e0    } | .Ndr64ExtProxyInitialize
        _m027 ndrole64_dcom_client_interface_t                                                         ndr_ext_setup_client_interface;                                                         //{ +0x00d8    +0x00e8    +0x00e8    +0x00e8    } | .NdrExtSetupClientInterface
        _m028 ndrole64_dcom_neg_syntax_t                                                               ndr_ext_negotiate_transfer_syntax;                                                      //{ +0x00e0    +0x00f0    +0x00f0    +0x00f0    } | .NdrExtNegotiateTransferSyntax
                                                                                                                                                                                             
        // Windows 10 v2004, Windows 11, Windows 10 v20H2                                                                                                                                    
        //                                                                                                                                                                                   
        _m029 ndr_ext_initialize_call_object_t                                                         ndr_ext_initialize_call_object;                                                         //{ +0x00b0    +0x00b0    +0x00b0    } | .NdrExtInitializeCallObject
        _m030 ndr_ext_use_fixed_wire_rep_for_interface_pointer_array_and_embedded_conformant_struct_t  ndr_ext_use_fixed_wire_rep_for_interface_pointer_array_and_embedded_conformant_struct;  //{ +0x00b8    +0x00b8    +0x00b8    } | .NdrExtUseFixedWireRepForInterfacePointerArrayAndEmbeddedConformantStruct
                                                                                                                                                                                             
        SDK_MAGIC_PROPERTIES( "_NDROLE_EXTENSION_ROUTINES_TABLE.$", 0xf8, true, 0xf3606e16245aa16b );                                                                                        
        SDK_DYNAMIC_SIZE( ndrole_extension_routines_table_t );                                                                                                                               
    };                                                                                                                                                                                       
};
#include "magic/ndrole_extension_routines_table_t.end.hpp"
